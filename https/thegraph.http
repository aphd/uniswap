@endpoint=https://thegraph.com/explorer/api/playground/QmTZ8ejXJxRo7vDBS4uwqBeGoxLSWbhaA7oXa1RvxunLy7
@origin=https://thegraph.com

### GET 
POST {{endpoint}}
accept: application/json, multipart/mixed
content-type: application/json
origin: {{origin}}
# X-REQUEST-TYPE: GraphQL

{
  "query": "{\n  factories(first: 5) {\n    id\n    poolCount\n    txCount\n    totalVolumeUSD\n  }\n  bundles(first: 5) {\n    id\n    ethPriceUSD\n  }\n}"
}

### GET 
POST {{endpoint}}
accept: application/json, multipart/mixed
content-type: application/json
origin: {{origin}}
X-REQUEST-TYPE: GraphQL

query {
  pools(first: 1) {
    id
    token0 {
      id
      symbol
    }
    token1 {
      id
      symbol
    }
    totalValueLockedUSD
    volumeUSD
    feesUSD
    feeTier
    # Assuming APR can be calculated as (feesUSD / totalValueLockedUSD) * (365 / days)
    # Replace `days` with the number of days you want to calculate APR for.
  }
}

{}

### GET  the cumulative amount of USDC-WETH pair deposits where the pool_id is 0x07a72f8f6a29cf501e7226ca82264f9ee79380e7
POST {{endpoint}}
accept: application/json, multipart/mixed
content-type: application/json
origin: {{origin}}
X-REQUEST-TYPE: GraphQL

query {
  swaps(first: 1000, where: { 
    timestamp_gte: 1693526400,
    pool: "0x07a72f8f6a29cf501e7226ca82264f9ee79380e7"
  }, orderBy: timestamp, orderDirection: asc) {
    amount0
    amount1
    timestamp
    pool {
      id
      token0 { symbol }
    }
  }
}

### get details on tickLower, tickUpper, and fee within a specific time frame
POST {{endpoint}}
accept: application/json, multipart/mixed
content-type: application/json
origin: {{origin}}
X-REQUEST-TYPE: GraphQL

query {
  pools(orderBy: volumeUSD, orderDirection: desc, first: 10) {
    id
    token0 { symbol }
    token1 { symbol }
    volumeUSD
  }
}
